@model MusicStoreMVCApp.Models.AddMovieViewModel

@{
    ViewBag.Title = "Index";
}

<div class="pt-5 px-5">
   @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Add Movie / Product</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container-fluid mb-3 pt-4">
            <div class="form-group row mb-3">
                <div class="col-4">
                    @Html.LabelFor(m => m.Movie.MovieTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-8">
                    @Html.EditorFor(m => m.Movie.MovieTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Movie.MovieTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-4">
                    @Html.LabelFor(m => m.Movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-8">
                    @Html.EditorFor(m => m.Movie.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Movie.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-4">
                    @Html.LabelFor(m => m.Movie.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-8">
                    @Html.EditorFor(m => m.Movie.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Movie.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-3">
                @Html.Label("Genre", htmlAttributes: new { @class = "control-label col-md-2" })

            </div>
            <div class="form-group row mb-3 px-3">
                @for (int i = 0; i < Model.GenreSelectedList.Count; i++)
                {
                    <div class="col-2 form-check">
                        @Html.CheckBoxFor(m => Model.GenreSelectedList[i].IsSelected, new { @class = "form-check-input" })
                        @Html.Label(Model.GenreSelectedList[i].Genre.GenreType, new { @class = "form-check-label" })
                        @Html.HiddenFor(m => Model.GenreSelectedList[i].Genre.Id)
                    </div>
                }
            </div>
            <div class="form-group row mb-3">
                <div class="col-4">
                    @Html.LabelFor(m => m.Movie.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-8">
                    @Html.EditorFor(m => m.Movie.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Movie.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    @Html.LabelFor(m => m.Movie.ReleasedYear, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-8">
                    @Html.EditorFor(m => m.Movie.ReleasedYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Movie.ReleasedYear, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <div class="form-group">
                <input type="submit" class="btn btn-primary" style="align-self: center;" value="Add Product" />
            </div>
        </div>
    </div>
    }
</div>
